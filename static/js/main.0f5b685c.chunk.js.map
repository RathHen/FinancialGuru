{"version":3,"sources":["reducers/index.js","components/validate.js","components/loans.js","index.js"],"names":["combineReducers","form","formReducer","contacts","validate","values","errors","inc","min","Income","Number","loans","length","loansArrayErrors","forEach","loan","loanIndex","loanErrors","principal","apr","name","_error","renderPrincipal","_ref","input","label","type","_ref$meta","meta","touched","error","react_default","a","createElement","className","htmlFor","Object","assign","placeholder","id","renderName","_ref2","_ref2$meta","renderIncome","_ref3","_ref3$meta","style","color","fontWeight","marginLeft","renderAPR","_ref4","_ref4$meta","renderDelete","class","renderLoans","_ref5","fields","_ref5$meta","submitFailed","marginRight","map","index","key","Field","concat","component","_this","disabled","bugPatch","props","onClick","push","document","body","classList","add","submitSucceeded","data","reduce","acc","randomColor","require","formateArray","_","cloneDeep","result","es6","dataKey","stroke","sortedVal","nameArray","item","paymentArray","console","log","i","loanPaymentsArray","this","calcPaymemts","itemsArray","income","info","baseData","val","firstMonth","finalData","payment","sortBy","reverse","totalInterestYTD","interest","totalPaid","checkNotDone","loanAPR","ceil","accruedInterest","toString","totalMinApplied","leftOverIncome","paymentData","width","height","margin","top","right","left","bottom","strokeDasharray","createLines","amortizationLoanNames","amortizationPayments","_this$props","handleSubmit","pristine","reset","submitting","onSubmit","FieldArray","renderChart","Component","connect","state","reduxForm","intitialState","initialValues","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","es","components_loans","querySelector"],"mappings":"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","file":"static/js/main.0f5b685c.chunk.js","sourcesContent":["import {combineReducers } from 'redux';\nimport { reducer as formReducer } from 'redux-form';\nimport contacts from './contactReducer';\n\n\n\n\nexport default combineReducers({\n    form: formReducer, \n    contacts\n});","import React from 'react';\n\nconst validate = values => {\n  // console.log(values)\n    const errors = {}\n    let inc = 0;\n    let min = 0;\n    if(!values.Income) {\n      errors.Income = 'Required'\n    } else {\n      inc = Number(values.Income);\n    }\n\n    if (!values.loans || !values.loans.length) {\n      errors.loans = { _error: 'At least one loan must be entered' }\n    } else {\n      const loansArrayErrors = []\n      values.loans.forEach((loan, loanIndex) => {\n        const loanErrors = {}\n        if (!loan || !loan.principal) {\n          loanErrors.principal = 'Required'\n          loansArrayErrors[loanIndex] = loanErrors\n        }\n        if (!loan || !loan.apr) {\n          loanErrors.apr = 'Required'\n          loansArrayErrors[loanIndex] = loanErrors\n        }\n        if (!loan || !loan.name) {\n          loanErrors.name = 'Required'\n          loansArrayErrors[loanIndex] = loanErrors\n        }\n        if (!loan || !loan.min) {\n          loanErrors.min = 'Required'\n          loansArrayErrors[loanIndex] = loanErrors\n        } else {\n          min += Number(loan.min);\n        }\n      })\n      if(loansArrayErrors.length) {\n        errors.loans = loansArrayErrors\n      }\n      if (min > inc){\n       \n        errors.Income = 'Income lower than Minimum Payments'\n     \n      }\n    }\n    return errors\n  }\n  \n\n  export default validate\n\n  ","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Field, FieldArray, reduxForm } from 'redux-form';\nimport validate from './validate';\nimport _ from 'lodash';\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis, Tooltip, Legend } from 'recharts';\n\n\nclass loans extends Component {\n    componentDidMount() {\n      document.body.classList.add('background-red');\n  }\n\n\n    renderPrincipal = ({ input, label, type, meta: { touched, error } }) => (\n        <div>\n          {/* <label>{label}</label> */}\n          <div className=\"ui small ight labeled input \">\n              <label htmlFor=\"amount\" className=\"ui label\">$</label>\n            <input {...input} type={type} placeholder={label} id=\"amount\" />\n            <div className=\"ui basic label\">.00</div>\n            <div>\n            {touched && error && <div className=\"ui left pointing red basic label\">{error}</div>}\n            </div>\n          </div>\n          \n        </div>\n      )\n    \n     renderName = ( { input, label, type, meta: { touched, error } }) => (\n        <div>\n            \n         \n          \n          {/* <label>{label}</label> */}\n          <div className=\"ui input\">\n            <input {...input} type={type} placeholder={label} id=\"amount\" />\n            <div>\n            {touched && error && <div className=\"ui left pointing red basic label\">{error}</div>}\n            </div>\n          \n          </div>\n          \n        </div>\n        \n        \n      )\n    \n      renderIncome = ({ input, label, type, meta: { touched, error } }) => \n      (\n        <div>\n          <br>\n          </br>\n          <h1 style= {{color: \"Black\", fontWeight: \"bold\", marginLeft: \"7%\"}}>Payment Calculator</h1>\n          <p2 style= {{marginLeft: \"7%\"}}>A calculator that allows you to enter multiple loans and provide the most optimal payment plan to save you money and time!</p2>\n          {/* <label>{label}</label> */}\n          <br></br>\n          <h2 style={{marginLeft: \"35%\", fontWeight: \"bolder\"}}>My disposable Monthly Income Is</h2>\n          <div  style= {{ marginLeft: \"37%\" }} className=\"ui large right labeled input\">\n              <label htmlFor=\"amount\"  className=\"ui label\">$</label>\n            <input {...input} type={type} placeholder={label} id=\"amount\" />\n            <div className=\"ui basic label\">.00</div>\n            <div>\n            {touched && error && <div className=\"ui left pointing red basic label\">{error}</div>}\n            </div>\n          </div>\n          \n        </div>\n      )\n    \n    //   const displayError = error => (\n    //     <div className=\"ui poiting red basic label\">\n    //       {error}\n    //     </div>\n    \n    //   )\n\n    bugPatch(props){\n      if (props.submitSucceeded) {\n        // console.log(true)\n        return true\n      }\n      else {\n          return false\n        }\n    }\n    \n    renderAPR = ({ input, label, type, meta: { touched, error } }) => (\n        <div>\n          {/* <label>{label}</label> */}\n          <div className=\"ui small right labeled input\">\n              <label htmlFor=\"amount\" className=\"ui label\"></label>\n            <input {...input} type={type} placeholder={label} id=\"amount\" />\n            <div className=\"ui basic label\">%</div>\n            <div>\n            {touched && error && <div className=\"ui left pointing red basic label\">{error}</div>}\n            </div>\n          </div>\n          \n        </div>\n      )\n    \n    renderDelete  = (\n        <button class=\"ui icon button\">\n        <i class=\"cloud icon\"></i>\n        </button>\n      )\n\n    renderLoans = ({ fields, meta: { touched, error, submitFailed } }) => (\n    \n        <ul>\n          <div style={{marginRight: \"15%\", marginLeft: \"5%\"}}>\n        <table className=\"ui inverted teal celled table\">\n          {/* Add loans group, mapping through the array and giving unique keys*/}\n          <thead>\n                <tr>\n                <th className=\"three wide\">Name</th>\n                <th className=\"three wide\">Principal</th>\n                <th className=\"three wide\">APR</th>\n                <th >Minimum Payment</th>\n                </tr>\n            </thead>\n          <tbody>\n    \n        \n           \n          {fields.map((loan, index) =>\n            // <li key={index}>\n                <tr key={index}>\n            {/* Button to remove a loan */}\n\n            <td>\n         \n              <Field \n                  name={`${loan}.name`}\n                  type=\"text\"\n                  component={this.renderName}\n                  label=\"Enter Name...\"\n                  disabled={this.bugPatch(this.props)}\n              />\n           \n            </td>\n        \n            \n                 <td>\n              <Field \n                name={`${loan}.principal`}\n                type=\"number\"\n                component={this.renderPrincipal}\n                label=\"Enter Principal...\"\n                disabled={this.bugPatch(this.props)}\n            />\n            </td>\n            <td>\n            <Field \n                name={`${loan}.apr`}\n                type=\"text\"\n                component={this.renderAPR}\n                label=\"Ex 3.65%\"\n                disabled={this.bugPatch(this.props)}\n            />\n            </td>\n            <td>\n            <Field \n                name={`${loan}.min`}\n                type=\"number\"\n                component={this.renderPrincipal}\n                label=\"Minimum Payment...\"\n                disabled={this.bugPatch(this.props)}\n            />\n            </td>\n            {/* <button \n          className=\"circular negative ui icon button\" \n          onClick={() => fields.remove(index)} \n          type=\"button\"\n          title=\"Remove loan\"\n          disabled={this.bugPatch(this.props)}>\n          <i className=\"trash alternate icon\"></i>\n          </button> */}\n            \n            </tr>\n            // </li>\n          )}\n\n          </tbody>\n\n          \n          </table>\n          \n\n          <button className=\"positive ui labeled icon button\" disabled={this.bugPatch(this.props)} type=\"button\" onClick={() => fields.push({})}>Add Loans or Debt\n                <i className=\"plus circle icon\"></i>\n            </button>\n            </div>\n            \n            {(touched || submitFailed) && error && <span>{error}</span>}\n        </ul>\n        \n      )\n\n    checkNotDone(data){\n      //checks that there is still principal left in any of the loans\n      const totalPrincipal = data.reduce((acc, loan) => acc + Number(loan.principal), 0);\n      // console.log(totalPrincipal)\n      if (totalPrincipal > 0) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n\n    createLines(data){\n      var randomColor = require('randomcolor');\n\n      //go through a object loans and give a unique color to each\n      //create an array that does not have the name \n    \n      var formateArray = _.cloneDeep(data[0]);\n      var result = []; \n      delete formateArray[\"payment\"];\n      // console.log(formateArray)\n      //looping through the objects properties \n      for (var loan in formateArray ) {\n      //  console.log(loan)\n       //grabbing the key to pass datakey\n       result.push(<Line key ={loan} type=\"monotone\" dataKey={loan} stroke={randomColor()} />);\n      }\n      return result;\n    }\n\n    amortizationLoanNames(sortedVal){\n      \n      var nameArray = [];\n      sortedVal.forEach(function (item) {\n        nameArray.push(<th key={item.name}>{item.name}</th>)\n    });\n    return nameArray;\n    }\n    amortizationPayments(sortedVal){\n      var paymentArray = [];\n      console.log(sortedVal)\n      for (var i = 0; i < sortedVal[0].loanPaymentsArray.length; i++) { \n        paymentArray.push(<tr key={i}>{this.calcPaymemts(sortedVal, i)}</tr>);\n      }\n      console.log(paymentArray)\n      return paymentArray;\n    }\n\n    calcPaymemts(sortedVal, i){\n      var itemsArray = [];\n      itemsArray.push(<td key={i}>{i+1}</td>);\n      sortedVal.forEach(function (item) {\n        itemsArray.push(<td key={item.loanPaymentsArray[i]}>{item.loanPaymentsArray[i]}</td>)\n      });\n      return itemsArray;\n    };\n  \n\n\n    renderChart(props) {\n      //  console.log(this.props.info.form.loans.values.loans)\n       if (this.props.submitSucceeded) {\n        const income = this.props.info.form.loans.values.Income;\n        const baseData = this.props.info.form.loans.values.loans\n        var val = _.cloneDeep(baseData);\n        var firstMonth = true;\n        var finalData = [];\n        var payment = 0;\n        var sortedVal = _.sortBy(val, ['apr']).reverse();\n        var totalInterestYTD = 0;\n        var interest = 0;\n        var totalPaid = 0;\n        sortedVal.forEach(function(loan) {\n          loan.loanPaymentsArray = [];\n        })\n        console.log(sortedVal)\n        // for (var i = 0; i < sortedVal.length; i++) { \n        //   console.log(sortedVal[i].name)\n        //   console.log(sortedVal[i].principal)\n        // }\n        // While loop to check that loan principal still > 0\n        while (this.checkNotDone(sortedVal)){\n          //check if first month, applies accrued interest only to start of 2nd payment onwards. \n          // for (var i = 0; i < sortedVal.length; i++) { \n          //     console.log(sortedVal[i].name + \": \"+ sortedVal[i].principal )\n          //     console.log(\"prinicpal month\")\n          //   }\n          if(!firstMonth){\n            //loop through each loan and add loan interest to principal\n            sortedVal.forEach(function(item) {\n              var principal = Number(item.principal);\n              //round apr to nearest hundredth, calc monthly mpr\n              var loanAPR = _.ceil((Number(item.apr)/100)/12, 2);\n\n              // console.log(loanAPR + \" : apr\");\n              //only on loans balance that is not 0\n              if (principal !== 0) {\n                //the object array is in strings\n                var accruedInterest = _.ceil(loanAPR*principal,2);\n                //add interest to totalInterestYTD and interest\n                interest = accruedInterest;\n                totalInterestYTD = _.ceil(totalInterestYTD+accruedInterest);\n                item.principal = _.ceil(accruedInterest + principal,2).toString();\n              }\n            })\n          }\n          // new payment month\n          payment += 1;\n          var zero = 0;\n          var totalMinApplied = 0;\n          // apply the min to each loan applicable, then adjust loan principal.\n          sortedVal.forEach(function(item) {\n            var principal = Number(item.principal); \n            var min = Number(item.min);\n            item.loanPaymentsArray[payment-1] = 0;\n            if (principal >= min) {\n              item.loanPaymentsArray[payment-1] = min;\n              item.principal = (principal - min).toString();;\n              totalMinApplied += min;\n            } else { \n              item.loanPaymentsArray[payment-1] += principal;\n              totalMinApplied += principal;\n              item.principal = zero.toString();;\n            }\n            //add min to totalPaid since min will deduct from income\n            totalPaid += totalMinApplied;\n          })\n          var leftOverIncome = Number(income) - totalMinApplied;\n          // Apply leftOverIncome to highest APR, array is already sorted highest apr to lowest\n          sortedVal.forEach(function(item) {\n            var principal = Number(item.principal);\n          \n            if (principal !== 0 || leftOverIncome !== 0){\n              // Applying income for the loan in scenarios where leftoverincome >= loan principal, carry the leftoverincome to \n              // the next loan\n              if (leftOverIncome >= principal){\n                item.loanPaymentsArray[payment-1] += principal;\n                console.log(item.loanPaymentsArray[payment-1] + \"here\")\n                leftOverIncome -= principal;\n                //add princiapl to totalpaid since principal deducts leftOverIncome\n                totalPaid += principal;\n                item.principal = zero.toString();\n              } else {\n                //  when leftoverincome < loan principal, set incomeleft to 0 and adjust principal, while loop restarts after since loan principal remains\n                item.loanPaymentsArray[payment-1] += _.ceil(Number(leftOverIncome,2));\n                item.principal = _.ceil(Number(principal - leftOverIncome),2);\n                totalPaid += leftOverIncome;\n                leftOverIncome = 0;\n              }\n            }\n          })\n\n          // create a new object to push into final data so this payment cycle is recorded\n          var paymentData = new Object();\n\n          paymentData[\"payment\"] = `Payment ${payment}`;\n          for (var i = 0; i < sortedVal.length; i++) { \n            var loanName = `${sortedVal[i].name} Balance`;\n            paymentData[loanName] = Number(sortedVal[i].principal);\n            // console.log(\"loop\")\n          }\n          //add interest data to the object before pushing to finalData\n          paymentData[\"Interest Paid\"] = interest;\n          paymentData[\"Interest YTD\"] = totalInterestYTD;\n          paymentData[\"Total Paid YTD\"] = totalPaid;\n        finalData.push(paymentData);\n        firstMonth = false;\n        }\n        \n      return (\n        \n        <div>                    \n          <div style={{marginLeft: \"auto\"}}>\n          <LineChart width={1600} height={800} data={finalData}\n            margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"payment\" />\n            <YAxis />\n            <Tooltip />\n            <Legend />\n            {this.createLines(finalData)}\n          </LineChart>\n          </div>\n\n          <table style={{marginLeft: \"2%\", marginRight:\"10%\"}} className=\"ui teal table\">\n            <thead>\n              <tr><th>Total Payments</th>\n              <th>Total Interest</th>\n              <th>Total Paid</th>\n            </tr></thead><tbody>\n              <tr>\n                <td>{payment}</td>\n                <td>{totalInterestYTD}</td>\n                <td>{totalPaid}</td>\n              </tr>\n            </tbody>\n          </table>\n        \n\n      <table style={{marginLeft: \"2%\", marginRight:\"10%\"}} className=\"ui teal very compact table\">\n        <thead>\n          <tr>\n            <th>Payment #</th>\n            {this.amortizationLoanNames(sortedVal)}\n          </tr>\n        </thead>\n        <tbody>\n        {this.amortizationPayments(sortedVal)}\n        </tbody>\n        </table>\n        </div>\n      );\n      } else {\n        \n            return (\n\n                <div className=\"ui fluid placeholder segment\">\n                <div className=\"ui icon header\">\n                    <i className=\"hand point up outline icon\"></i>\n                    Please Click Calculate\n                </div>\n                <div className=\"ui active centered inline loader\"></div>\n                \n                \n                </div>\n           );\n        }\n    }\n\n    render(){\n        // console.log(\"this.props\")\n        // console.log(this.props)\n        // console.log(this.props)\n        \n     \n        const { handleSubmit, pristine, reset, submitting } = this.props\n        return  (\n        <div >\n          \n            <form onSubmit={handleSubmit(validate)}>\n              \n                    <Field name=\"Income\" type=\"number\" component={this.renderIncome} label=\" Income\" disabled={this.bugPatch(this.props)}/>\n                    <div>\n                    <FieldArray name= \"loans\" component={this.renderLoans}/>\n                   </div>\n                    <div className=\"ui section divider\"></div>\n                    <div style={{marginLeft: \"42%\"}}className=\"ui buttons\">\n                        <button className=\"ui primary button\" type=\"submit\"  disabled={submitting}>Calculate</button>\n                        <div className=\"or\"></div>\n                        <button className=\"ui button\" type=\"button\" disabled={pristine || submitting} onClick={reset}>Reset</button>\n                    </div>\n                </form>\n                {this.renderChart()}\n                </div>\n               \n        );\n        }\n    };\n\n\n\nconst mapStateToProps = (state) => {\n    return {\n        info: state\n    }\n};\n\n\nloans = connect(\n    mapStateToProps\n)(loans);\n\nexport default reduxForm({\n    form: 'loans',\n    initialValues: {\n        \"loans\": [\n          {}\n        ]\n      },\n      validate \n})(loans);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport reduxThunk from 'redux-thunk';\nimport reducers from './reducers';\nimport Loans from './components/loans';\n\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst configureStore = (intitialState) => {\n  return createStore(reducers, intitialState, composeEnhancers(applyMiddleware(reduxThunk)));\n}\n\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <Loans >\n\n    </Loans>\n    \n    \n   </Provider>,\n  document.querySelector('#root')\n);\n"],"sourceRoot":""}